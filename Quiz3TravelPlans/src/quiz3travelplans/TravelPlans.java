/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz3travelplans;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import quiz3travelplans.Trip.TransMode;

/**
 *
 * @author 0639300
 */
public class TravelPlans extends javax.swing.JFrame {

    DefaultListModel<Trip> modelTripList = new DefaultListModel<>();
    Database db;
    DateFormat format = new SimpleDateFormat("yyyy/MM/dd");
    Trip currEditedItem;

    public TravelPlans() {
        try {
            initComponents();
            dlgAddTrip.pack();
            db = new Database();
            refreshList();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Unable to connect to database\n" + ex.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }

    }

    class CompareDestinations implements Comparator<Trip> {

        @Override
        public int compare(Trip o1, Trip o2) {
            int result = o1.getDestination().compareTo(o2.getDestination());
            return result;

        }

    }

    class CompareBudget implements Comparator<Trip> {

        @Override
        public int compare(Trip o1, Trip o2) {
            // floating point values comparison must be done this way
            if (o1.getDailyBudget() > o2.getDailyBudget()) {
                return 1;
            }
            if (o1.getDailyBudget() < o2.getDailyBudget()) {
                return -1;
            }
            return 0;
        }

    }

    void refreshList() {
        try {
            ArrayList<Trip> al = db.getAllTrips();
            modelTripList.clear();
            for (Trip t : al) {
                modelTripList.addElement(t);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Unable to connect to database\n" + ex.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        dlgAddTrip = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        dlgAddTrip_tfDestination = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dlgAddTrip_lblDailyBudget = new javax.swing.JLabel();
        dlgAddTrip_sldBudget = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dlgAddTrip_cbTransport = new javax.swing.JComboBox<>();
        dlgAddTrip_btnAddTrip = new javax.swing.JButton();
        dlgAddTrip_tfReturn = new javax.swing.JTextField();
        dlgAddTrip_tfDeparture = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miExit = new javax.swing.JMenuItem();
        menAddTrip = new javax.swing.JMenu();
        menSort = new javax.swing.JMenu();
        miSortDestination = new javax.swing.JMenuItem();
        miSortByBudget = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jLabel1.setText("Destination");

        jLabel2.setText("Daily Budget");

        dlgAddTrip_sldBudget.setMajorTickSpacing(100);
        dlgAddTrip_sldBudget.setMaximum(1000);
        dlgAddTrip_sldBudget.setMinorTickSpacing(50);
        dlgAddTrip_sldBudget.setValue(500);
        dlgAddTrip_sldBudget.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dlgAddTrip_sldBudgetStateChanged(evt);
            }
        });

        jLabel3.setText("Departure");

        jLabel4.setText("Return");

        jLabel5.setText("Transport");

        dlgAddTrip_cbTransport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Train", "Plane", "Other" }));

        dlgAddTrip_btnAddTrip.setText("Add Trip");
        dlgAddTrip_btnAddTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddTrip_btnAddTripActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAddTripLayout = new javax.swing.GroupLayout(dlgAddTrip.getContentPane());
        dlgAddTrip.getContentPane().setLayout(dlgAddTripLayout);
        dlgAddTripLayout.setHorizontalGroup(
            dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddTripLayout.createSequentialGroup()
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgAddTripLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dlgAddTripLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dlgAddTrip_tfDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dlgAddTripLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dlgAddTrip_lblDailyBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(dlgAddTripLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(dlgAddTrip_sldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dlgAddTripLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(dlgAddTrip_btnAddTrip))
                    .addGroup(dlgAddTripLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlgAddTripLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(dlgAddTrip_tfDeparture))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlgAddTripLayout.createSequentialGroup()
                                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dlgAddTrip_cbTransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dlgAddTrip_tfReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        dlgAddTripLayout.setVerticalGroup(
            dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddTripLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dlgAddTrip_tfDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dlgAddTrip_lblDailyBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dlgAddTrip_sldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dlgAddTrip_tfDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dlgAddTrip_tfReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgAddTripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dlgAddTrip_cbTransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dlgAddTrip_btnAddTrip)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(modelTripList);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jMenu1.setText("File");
        jMenu1.add(jSeparator1);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        menAddTrip.setText("Add Trip");
        menAddTrip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menAddTripMouseClicked(evt);
            }
        });
        jMenuBar1.add(menAddTrip);

        menSort.setText("Sort");

        miSortDestination.setText("Sort by Destination");
        miSortDestination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miSortDestinationMouseClicked(evt);
            }
        });
        miSortDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSortDestinationActionPerformed(evt);
            }
        });
        menSort.add(miSortDestination);

        miSortByBudget.setText("Sort by Budget");
        miSortByBudget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSortByBudgetActionPerformed(evt);
            }
        });
        menSort.add(miSortByBudget);

        jMenuBar1.add(menSort);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miSortDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSortDestinationActionPerformed
        try {
            ArrayList<Trip> al = new ArrayList<Trip>(db.getAllTrips());            
            Collections.sort(al, new CompareDestinations());
            modelTripList.clear();
            for (Trip t : al) {
                modelTripList.addElement(t);
                
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(TravelPlans.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_miSortDestinationActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed

    private void menAddTripMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menAddTripMouseClicked
        dlgAddTrip.setVisible(true);
    }//GEN-LAST:event_menAddTripMouseClicked

    private void dlgAddTrip_sldBudgetStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dlgAddTrip_sldBudgetStateChanged
        dlgAddTrip_lblDailyBudget.setText(String.valueOf(dlgAddTrip_sldBudget.getValue()));
    }//GEN-LAST:event_dlgAddTrip_sldBudgetStateChanged

    private void dlgAddTrip_btnAddTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddTrip_btnAddTripActionPerformed
        String x = String.valueOf(dlgAddTrip_cbTransport.getSelectedItem());
        String destination = dlgAddTrip_tfDestination.getText();
        int budget = Integer.parseInt(dlgAddTrip_lblDailyBudget.getText());
        try {
            Date departure = format.parse(dlgAddTrip_tfDeparture.getText());
            Date returnDate = format.parse(dlgAddTrip_tfReturn.getText());
            TransMode trans = TransMode.valueOf(x);
            Trip a = new Trip(0, destination, budget, departure, returnDate, trans);
            db.addTrip(a);
        } catch (ParseException ex) {
            Logger.getLogger(TravelPlans.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TravelPlans.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshList();
        dlgAddTrip.setVisible(false);
    }//GEN-LAST:event_dlgAddTrip_btnAddTripActionPerformed

    private void miSortByBudgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSortByBudgetActionPerformed
        
        try {
            ArrayList<Trip> al = new ArrayList<Trip>(db.getAllTrips());            
            Collections.sort(al, new CompareBudget());
            modelTripList.clear();
            for (Trip t : al) {
                modelTripList.addElement(t);
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(TravelPlans.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_miSortByBudgetActionPerformed

    private void miSortDestinationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miSortDestinationMouseClicked
         
    }//GEN-LAST:event_miSortDestinationMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TravelPlans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TravelPlans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TravelPlans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TravelPlans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TravelPlans().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dlgAddTrip;
    private javax.swing.JButton dlgAddTrip_btnAddTrip;
    private javax.swing.JComboBox<String> dlgAddTrip_cbTransport;
    private javax.swing.JLabel dlgAddTrip_lblDailyBudget;
    private javax.swing.JSlider dlgAddTrip_sldBudget;
    private javax.swing.JTextField dlgAddTrip_tfDeparture;
    private javax.swing.JTextField dlgAddTrip_tfDestination;
    private javax.swing.JTextField dlgAddTrip_tfReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<Trip> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menAddTrip;
    private javax.swing.JMenu menSort;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miSortByBudget;
    private javax.swing.JMenuItem miSortDestination;
    // End of variables declaration//GEN-END:variables
}
